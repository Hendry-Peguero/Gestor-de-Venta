// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using ApiPresidenciaDR.Application_Layer.Dtos.ScadaDtos.UltimosNiveles;
using ApiPresidenciaDR.Models.Context.ScadaContext;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace ApiPresidenciaDR.Models.Context.ScadaContext
{
    public partial class scadadbContext
    {
        private IscadadbContextProcedures _procedures;

        public virtual IscadadbContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new scadadbContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public IscadadbContextProcedures GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<GetUltimosNivelesResult>().HasNoKey().ToView(null);
            modelBuilder.Entity<GetGeneracionUltimas24HorasResult>().HasNoKey().ToView(null);
            modelBuilder.Entity<GetNivelCentralesResult>().HasNoKey().ToView(null);
            modelBuilder.Entity<GetPotenciaActiva1MinutoResult>().HasNoKey().ToView(null);
            modelBuilder.Entity<GetPotenciaActiva4SegundosResult>().HasNoKey().ToView(null);
            modelBuilder.Entity<GetNivelCentralesResult>().HasNoKey().ToView(null);
            modelBuilder.Entity<GetNivel6MesesResults>().HasNoKey().ToView(null);
        }
    }

    public partial class scadadbContextProcedures : IscadadbContextProcedures
    {
        private readonly scadadbContext _context;

        public scadadbContextProcedures(scadadbContext context)
        {
            _context = context;
        }

        public virtual async Task<List<GetGeneracionUltimas24HorasResult>> GetGeneracionUltimas24HorasAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<GetGeneracionUltimas24HorasResult>("EXEC @returnValue = [dbo].[GetGeneracionUltimas24Horas]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        //ultimos niveles
        public virtual async Task<List<GetUltimosNivelesResult>> UltimosNiveleCentralessAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new[] { parameterreturnValue };

            var result = await _context.SqlQueryAsync<GetUltimosNivelesResult>("EXEC @returnValue = [dbo].[GetLastRegister]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return result;
        }

        public virtual async Task<List<GetNivelCentralesResult>> GetNivelCentralesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<GetNivelCentralesResult>("EXEC @returnValue = [dbo].[GetNivelCentrales]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<GetPotenciaActiva1MinutoResult>> GetPotenciaActiva1MinutoAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<GetPotenciaActiva1MinutoResult>("EXEC @returnValue = [dbo].[GetPotenciaActiva1Minuto]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<GetPotenciaActiva4SegundosResult>> GetPotenciaActiva4SegundosAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<GetPotenciaActiva4SegundosResult>("EXEC @returnValue = [dbo].[GetPotenciaActiva4Segundos]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
        public virtual async Task<List<GetNivel6MesesResults>> GetNiveles6mesesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new[]
            {
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<GetNivel6MesesResults>("EXEC @returnValue = [dbo].[GetNivelUltimos6Meses]", sqlParameters, cancellationToken);


            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

    }
}
