// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using ApiPresidenciaDR.Application_Layer.Dtos.ScadaDtos;
using ApiPresidenciaDR.Infrastructure_Layer.Data_Access.Models.CommonModels;
using ApiPresidenciaDR.Models.Context.ScadaContext;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using ApiPresidenciaDR.Application_Layer.Dtos.ScadaDtos.GeneracionUltimas24HorasDto;

using Microsoft.Data.SqlClient;
using System.Data;
using System.Threading.Tasks;
using ApiPresidenciaDR.Application_Layer.Dtos.ScadaDtos.UltimosNiveles;

namespace ApiPresidenciaDR.Models.Context.ScadaContext
{
    public partial class ScadaDataContext
    {
        private IScadaRepository _procedures;

        public virtual IScadaRepository Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new ScadaRepository(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public IScadaRepository GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Niveles>().HasKey(result => result.IDCentral);
            modelBuilder.Entity<Potencia>().HasKey(result => result.IDLlave);
        }
    }

    public partial class ScadaRepository : IScadaRepository
    {
        private readonly ScadaDataContext _context;

        public ScadaRepository(ScadaDataContext context)
        {
            _context = context;
        }

        public virtual async Task<List<GeneracionUltimas24HorasDto>> Generacion24hAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new[]
            {
                    parameterreturnValue,
                };
            var _ = await _context.SqlQueryAsync<GeneracionUltimas24HorasDto>("EXEC @returnValue = [dbo].[GetGeneracionUltimas24Horas]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }


        //Ultimos Niveles
        public virtual async Task<List<Niveles>> UltimosNiveleCentralessAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new[]
            {
                    parameterreturnValue,
                };
            var _ = await _context.SqlQueryAsync<Niveles>("EXEC @returnValue = [dbo].[GetNivelCentrales]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        //Niveles
        public virtual async Task<List<Niveles>> NivelCentrales5minutosAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new[]
            {
                    parameterreturnValue,
                };
            var _ = await _context.SqlQueryAsync<Niveles>("EXEC @returnValue = [dbo].[GetLastRegister]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        //Potencia
        public virtual async Task<List<Potencia>> PotenciaActiva5MinutoAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new[]
            {
                    parameterreturnValue,
                };
            var _ = await _context.SqlQueryAsync<Potencia>("EXEC @returnValue = [dbo].[GetUltimaPotenciaGenerada]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public async Task<List<GeneracionUltimas24HorasDto>> GetGeneracionUltimas24HorasAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = ParameterDirection.Output,
                SqlDbType = SqlDbType.Int,
            };

            var sqlParameters = new[]
                    {
                parameterreturnValue,
            };

            var result = await _context.SqlQueryAsync<GeneracionUltimas24HorasDto>("EXEC @returnValue = [dbo].[GetGeneracionUltimas24Horas]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return result;
        }


        public async Task<List<Niveles6MesesDto>> Niveles6MesesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = ParameterDirection.Output,
                SqlDbType = SqlDbType.Int,
            };

            var sqlParameters = new[] { parameterreturnValue };

            var result = await _context.SqlQueryAsync<Niveles6MesesDto>("EXEC @returnValue = [dbo].[GetNivelUltimos6Meses]", sqlParameters, cancellationToken = default);

            returnValue?.SetValue(parameterreturnValue.Value);

            return result;
        }
    }
}
